apiVersion: v1
kind: Service
metadata:
  labels:
    app: lockss
    lockss-stack-id: {{STACK}}
    io.kompose.service: lockss-metadata-service
  name: lockss-metadata-service
spec:
  ports:
  - name: "md-service-rest-port"
    port: {{MD_REST_PORT}}
    targetPort: {{MD_DEFAULT_REST_PORT}}
  - name: "md-service-ui-port"
    port: {{MD_UI_PORT}}
    targetPort: {{MD_DEFAULT_UI_PORT}}
{{#additional_ports MD}}
  - name: "__PORT_NAME__"
    port: __HOST_PORT__
    targetPort: __CONTAINER_PORT__
{{/additional_ports}}

  selector:
    io.kompose.service: lockss-metadata-service
  type: ClusterIP
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: lockss
    lockss-stack-id: {{STACK}}
    io.kompose.service: lockss-metadata-service
  name: lockss-md-data-pvc
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Mi
  storageClassName: local-storage
  selector:
    matchLabels:
      owner: "lockss-md-data"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: lockss
    lockss-stack-id: {{STACK}}
    io.kompose.service: lockss-metadata-service
  name: lockss-md-logs-pvc
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 1Mi
  storageClassName: local-storage
  selector:
    matchLabels:
      owner: "lockss-md-logs"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: lockss
    lockss-stack-id: {{STACK}}
    io.kompose.service: lockss-metadata-service
  name: lockss-md-tmp-pvc
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Mi
  storageClassName: local-storage
  selector:
    matchLabels:
      owner: "lockss-md-tmp"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: lockss
    lockss-stack-id: {{STACK}}
    io.kompose.service: lockss-metadata-service
  name: lockss-metadata-service
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: lockss-metadata-service
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: lockss
        lockss-stack-id: {{STACK}}
        io.kompose.network/{{STACK}}-network: "true"
        io.kompose.service: lockss-metadata-service
    spec:
      securityContext:
        runAsUser: {{LOCKSS_UID}}
        runAsGroup: {{LOCKSS_GID}}
      containers:
      - env:
        - name: JVM_OPTS_SERVICE_ID
          value: "--md--"
        - name: ARGS_ADDITIONAL
          value: "{{ARGS_ADDITIONAL}}"
        - name: JVM_OPTS_ADDITIONAL
          value: "{{MD_JVM_OPTS_ADDITIONAL}}"
        - name: LOCKSS_ADMIN_USER
          value: {{LOCKSS_ADMIN_USER}}
        - name: LOCKSS_CONFIG_URL
          value: {{CFG_URL}}
        - name: LOCKSS_PRESERVATION_GROUP
          value: {{LOCKSS_PRESERVATION_GROUP}}
        - name: LOCKSS_NEEDS_SECRETS
          value: "true"
        - name: LOCKSS_WAIT_FOR_PORT
          value: "{{POSTGRES_HOST}}:{{POSTGRES_PORT}}"
        - name: TZ
          value: {{LOCKSS_TIMEZONE}}
        - name: LOCKSS_USER
          value: {{LOCKSS_USER}}
        - name: LOCKSS_UID
          value: '{{LOCKSS_UID}}'
        - name: LOCKSS_GROUP
          value: {{LOCKSS_GROUP}}
        - name: LOCKSS_GID
          value: '{{LOCKSS_GID}}'
        - name: SUPPRESS_STD_REDIR
          value: '{{SUPPRESS_STD_REDIR}}'
        volumeMounts:
        - mountPath: /run/configs/lockss_bootstrap
          name: lockss-bootstrap
          subPath: lockss_bootstrap
        - mountPath: /run/configs/lockss_service
          name: md-service
          subPath: lockss_service
        - mountPath: /run/configs/lockss_service_opt
          name: md-service-opt
          subPath: lockss_service_opt
        - mountPath: /run/secrets/lockss-postgres-pass
          name: lockss-postgres-pass
          subPath: lockss-postgres-pass
        - mountPath: /run/secrets/lockss_ui_pass
          name: lockss-ui-pass
          subPath: lockss_ui_pass
        - mountPath: /run/secrets/lockss-auth
          name: lockss-auth
          subPath: lockss-auth
        - mountPath: /data
          name: lockss-md-data
        - mountPath: /var/log/lockss
          name: lockss-md-logs
        - mountPath: /tmp/lockss
          name: lockss-md-tmp
        image: "{{MD_IMG}}:{{MD_VERSION}}"
        imagePullPolicy: {{PULL_POLICY}}
        name: lockss-metadata-service
        ports:
        - name: "md-rest-port"
          containerPort: {{MD_DEFAULT_REST_PORT}}
          hostPort: {{MD_REST_PORT}}
          protocol: TCP
        - name: "md-ui-port"
          containerPort: {{MD_DEFAULT_UI_PORT}}
          hostPort: {{MD_UI_PORT}}
          protocol: TCP
{{#additional_ports MD}}
        - name: "__PORT_NAME__"
          containerPort: __CONTAINER_PORT__
          hostPort: __HOST_PORT__
          protocol: TCP
{{/additional_ports}}

      restartPolicy: Always
      hostAliases:
      - ip: "{{LOCKSS_IPADDR}}"
        hostnames:
        - "{{LOCKSS_HOSTNAME_LOWERCASE}}"
      volumes:
      - configMap:
          items:
          - key: lockss-bootstrap
            path: lockss_bootstrap
          name: lockss-bootstrap
        name: lockss-bootstrap
      - configMap:
          items:
          - key: md-service
            path: lockss_service
          name: md-service
        name: md-service
      - configMap:
          items:
          - key: md-service-opt
            path: lockss_service_opt
          name: md-service-opt
        name: md-service-opt
      - name: lockss-postgres-pass
        secret:
          secretName: lockss-postgres-pass
          items:
          - key: lockss-postgres-pass
            path: lockss-postgres-pass
      - name: lockss-ui-pass
        secret:
          secretName: lockss-ui-pass
          items:
          - key: lockss-ui-pass
            path: lockss_ui_pass
      - name: lockss-auth
        secret:
          secretName: lockss-auth
          items:
          - key: lockss-auth
            path: lockss-auth
      - name: lockss-md-data
        persistentVolumeClaim:
          claimName: lockss-md-data-pvc
      - name: lockss-md-logs
        persistentVolumeClaim:
          claimName: lockss-md-logs-pvc
      - name: lockss-md-tmp
        persistentVolumeClaim:
          claimName: lockss-md-tmp-pvc
